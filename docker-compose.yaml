version: '3.8'
services:
  risks:
    image: mzegarra/ms-risks-sg:1.0.6
    platform: linux/amd64
    build:
      context: ./ms-risk
      dockerfile: ./src/main/docker/Dockerfile
    environment:
      - DB_URL=jdbc:postgresql://csonicdevdb01.postgres.database.azure.com:5432/customers_db?currentSchema=risk_schema
      - DB_USER=csonicadmin
      - DB_PASSWORD=pwd
    ports:
      - "9062:8585"
  customers:
    image: mzegarra/ms-customers-sg:1.0.2
    platform: linux/amd64
    build:
      context: ./ms-customers
      dockerfile: ./src/main/docker/Dockerfile

    ports:
      - "9060:9060"
  accounts:
    image: mzegarra/ms-accounts-sg:1.0.9
    platform: linux/amd64
    build:
      context: ./ms-accounts
      dockerfile: ./src/main/docker/Dockerfile
    environment:
      - DB_URL=r2dbc:postgresql://csonicdevdb01.postgres.database.azure.com:5432/customers_db?schema=accounts_schema
      - DB_USER=csonicadmin
      - DB_PASSWORD=pwd
    ports:
      - "9061:9061"
  accounts-graphql:
    image: mzegarra/ms-accounts-graphql-sg:1.0.14
    platform: linux/amd64
    build:
      context: ./ms-accounts-graphql
      dockerfile: ./src/main/docker/Dockerfile
    ports:
      - "8081:8080"
    environment:
      - MSACCOUNTS_URL=http://accounts:9061/
  customers-graphql:
    image: mzegarra/ms-customers-graphql-sg:2.0.3
    platform: linux/amd64
    build:
      context: ./ms-customers-graphql
      dockerfile: ./src/main/docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - MSCUSTOMERS_URL=http://customers:9060/
      - DB_URL=jdbc:singlestore://svc-034eb066-0a94-4be5-ac87-cd30f2986a3c-dml.azr-virginia1-2.svc.singlestore.com:3306/CLIENTESDB?pool=true&maxPoolSize=10
      - DB_USER=user
      - DB_PASSWORD=pwd
      - APPLICATIONINSIGHTS_CONNECTION_STRING=InstrumentationKey=d872eb50-2c6a-42df-9ec7-ae144524e740;IngestionEndpoint=https://eastus-8.in.applicationinsights.azure.com/;LiveEndpoint=https://eastus.livediagnostics.monitor.azure.com/
  customers-graphql-otel:
    image: mzegarra/ms-customers-graphql-otel-sg:1.0.0
    platform: linux/amd64
    build:
      context: ./ms-customers-graphql
      dockerfile: ./src/main/docker/DockerfileOTEL
    ports:
      - "8080:8080"
    environment:
      - MSCUSTOMERS_URL=http://customers:9060/
      #- DB_URL=jdbc:singlestore://dddd:3306/CLIENTESDB?pool=true&maxPoolSize=10
      #- DB_USER=user
      #- DB_PASSWORD=pwd
      - JAVA_TOOL_OPTIONS="-javaagent:/opentelemetry-javaagent.jar"
      - OTEL_SERVICE_NAME=graphQL-customers
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_LOGS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://collector:4317
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    env_file:
      - path: default.env
        required: true
    depends_on:
      - collector
  risks-graphql:
    image: mzegarra/ms-risks-graphql-sg:1.0.2
    platform: linux/amd64
    build:
      context: ./ms-risks-graphql
      dockerfile: ./src/main/docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - MSCUSTOMERS_URL=http://risks:9062/
  db:
    image: postgres:16.1-alpine3.19
    platform: linux/amd64
    container_name: local_pgdb
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=customers_db
    volumes:
      #- ./db/customers_create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      #- ./db/accounts_create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./db/risks_create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    restart: always
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password
    volumes:
      - ./data:/var/lib/pgadmin
  gatling_graphql:
    image: mzegarra/docker-qa-stress:latest
    command: [-s, csonic.customers.Customer5Cic]
    #platform: linux/arm64/v8
    volumes:
      - ./load-test/gatling/results:/opt/gatling/results
      - ./load-test/gatling/user-files:/opt/gatling/user-files
    environment:
      - ENABLE_DOCKER=true
      - ENABLE_REPLY=false
  collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./collector/collector.yml:/etc/otel-collector-config.yaml
    command: ["--config=/etc/otel-collector-config.yaml"]
    ports:
      - "8889:8889"
      - "4317:4317"
      - "4318:4318"
    depends_on:
      - jaeger
  prometheus:
    image: prom/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus/:/etc/prometheus/
    ports:
      - 9464:9090
  jaeger:
    image: jaegertracing/all-in-one:1.55
    container_name: jaeger-server
    ports:
      - "5775:5775"
      - "6831:6831"
      - "6832:6832"
      - "5778:5778"
      - "16686:16686"
      #- "4317:4317"
      #- "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
